[
{"question": "What is the data type for whole numbers in Java?",
"answer": "int (integer)"},
{"question": "What is the data type for decimal numbers in Java?",
"answer": "float and double"},
{"question": "What is the data type for true or false values in Java?",
"answer": "boolean"},
{"question": "What is the data type for a single character in Java?",
"answer": "char"},
{"question": "What is the data type for a sequence of characters in Java?",
"answer": "String"},
{"question": "What is the data type that can store a reference of an object",
"answer": "Object"},
{"question": "What is the data type that denotes that a variable is not pointing to any memory location",
"answer": "null"},
{"question": "What is an access modifier in Java?",
"answer": "a keyword that is used to specify the level of access to a class, method, or variable. Examples include public,private,protected, and default."},
{"question": "What is the difference between public and private access modifiers?",
"answer": "A public class, method, or variable can be accessed by any other class or code. A private class, method, or variable can only be accessed within the same class."},
{"question": "What is encapsulation in Java?",
"answer": "the process of wrapping the data (fields) and behavior (methods) of an object within a single unit (class). It allows the developer to hide the implementation details of the object and expose only the necessary methods to interact with the object."},
{"question":" What is polymorphism in Java?",
"answer": "the ability of an object to take on many forms. In Java, it refers to the ability of an object to be used as an instance of any of its parent classes or interfaces."},
{"question": "What is inheritance in Java?",
"answer": "a mechanism that allows a new class to inherit the properties and methods of an existing class. The new class is called a subclass or child class, and the existing class is called a superclass or parent class."},
{"question": "What is an interface in Java?",
"answer": "a collection of abstract methods (methods without a body) that a class can implement. It is used to define a contract that the class must follow."},
{"question": "What is an abstract class in Java?",
"answer": "a class that cannot be instantiated and is typically used as a base class for other classes. It can contain both abstract and concrete methods (methods with a body)."},
{"question":" What is a constructor in Java?",
"answer": "a special method that is used to create and initialize an object of a class. It has the same name as the class and is automatically called when an object of the class is created."},
{"question":" What is the difference between a constructor and a method in Java?",
"answer": "A constructor is used to create and initialize an object of a class, while a method is used to perform a specific task or set of tasks."},
{"question": "What is a static method in Java?",
"answer": "a method that can be called on a class, rather than on an object of the class. It does not have access to the non-static fields or methods of the class."},
{"question": "What is an exception in Java?",
"answer": "an abnormal event that occurs during the execution of a program. It is used to indicate that something has gone wrong, and the program needs to take a specific action to handle it."},
{"question": "What is a try-catch block used for in Java?",
"answer":"used to handle exceptions in Java. The 'try' block contains the code that may throw an exception, and the 'catch' block contains the code that will handle the exception if it occurs."},
{"question": "What is a finally block in Java?",
"answer": "used in conjunction with a try-catch block in Java. The finally block contains code that will always be executed, regardless of whether an exception was thrown or caught. It is typically used to release resources or perform cleanup tasks."},
{"question":" What is the difference between a checked exception and an unchecked exception?",
"answer": "A checked exception is an exception that must be handled by the program, either by being caught in a try-catch block or being declared in the throws clause of a method. An unchecked exception is an exception that does not need to be handled by the program."},
{"question": "What is an Array in Java?",
"answer": "a data structure in Java that stores a fixed-size sequential collection of elements of the same type. It allows you to store and retrieve values by their index position."},
{"question": "What is an ArrayList in Java?",
"answer": "a class in Java that implements the List interface and provides a resizable array implementation of it. It allows you to store and retrieve elements dynamically and provides various methods to add, remove, and access elements."},
{"question": "What is a LinkedList in Java?",
"answer": "a class in Java that implements the List interface and provides a doubly-linked list implementation of it. It allows you to store and retrieve elements dynamically and provides various methods to add, remove, and access elements."},
{"question": "What is a HashMap in Java?",
"answer": "a class in Java that implements the Map interface and provides a hash table implementation of it. It stores key-value pairs and allows you to retrieve values based on their keys."},
{"question": "What is a Stack in Java?",
"answer": "a data structure in Java that implements the Last In First Out (LIFO) principle. It allows you to push and pop elements, and also provides a peek method to view the top element."},
{"question": "What is a Queue in Java?",
"answer": "a data structure in Java that implements the First In First Out (FIFO) principle. It allows you to add and remove elements, and also provides a peek method to view the question element."},
{"question": "What is a Tree in Java?",
"answer": "a data structure in Java that simulates a hierarchical tree-like structure. Each element in the tree is called a node and it may have parent and child nodes."},
{"question": "What is a Binary Tree in Java?",
"answer": "a Tree data structure in Java where each node has at most two childrens, left child and right child."},
{"question": "What is a Binary Search Tree in Java?",
"answer": "a Binary Tree data structure where each node has a value and left subtree node values are less than the node value and right subtree nodes are greater than the node value."},
{"question": "What is a Recursion in Java?",
"answer": "a programming technique where a function calls itself, directly or indirectly. It is a powerful technique but needs to be used carefully as it can lead to stack overflow if the recursion is not implemented properly"},
{"question": "What is a Lambda expression in Java?",
"answer": "a shorthand notation for creating anonymous function, in other words a function with no name, that can be passed as a parameter to another function or used as an expression. It allows you to define functional interfaces with a simple and concise syntax, and is a functional programming feature introduced in Java 8."},
{"question": "What is a Stream in Java?",
"answer": "a sequence of elements that can be processed in parallel or sequentially. It was introduced in Java 8 and allows you to perform functional-style operations on the elements such as filter, map, reduce, and more."},
{"question": "What is a Optional in Java?",
"answer": "a container object that may or may not contain a non-null value. It was introduced in Java 8 and helps to prevent NullPointerException and make the code more readable"},
{"question": "What is a package in Java?",
"answer": "a namespace that organizes a set of related classes and interfaces. It allows you to group together classes with similar functionality and prevent naming conflicts with classes in other packages."},
{"question": "What is a JAR file in Java?",
"answer": "a Java Archive file that is used to package multiple Java class files, along with their associated resources like images, audio, etc. into a single file for distribution."},
{"question": "What is a JRE in Java?",
"answer": "a bundle of software that you need to run Java applications and applets. It includes the JVM (Java Virtual Machine), core libraries, and other components to run Java applications on a specific platform."},
{"question": "What is a JDK in Java?",
"answer": "a bundle of software that you need to develop and run Java applications and applets. It includes the JRE, as well as tools for developing, debugging, and monitoring Java applications."},
{"question": "What is a Maven in Java?",
"answer": "a build automation tool for Java projects. It helps to manage the project's dependencies, build, and test the code. It also helps to generate useful project information and reports."},
{"question": "Why are arrays considered unsafe in java",
"answer": "no bound checking means you can access incorrect memory locations and create errors"},
{"question": "what classes are immutable",
"answer": "strings, Wrappers,Enum, BigInterger,Localdate"},
{"question": "how do you compile in java",
"answer": "javac programme.java"},
{"question": "how do you run a programme in java",
"answer": "java programme"},
{"question": "what size is a byte in java",
"answer": "2^7"},
{"question": "what size is a short in java",
"answer": "2^15"},
{"question": "what size is a int in java",
"answer": "2^31"},
{"question": "what size is a long in java",
"answer": "2^63"},
{"question": "how do you declare a variable in java",
"answer": "dataType variableName"},
{"question": "how do you terminate a statement in java",
"answer": "use a semicolon"},
{"question": "how do you declare a constant in java",
"answer": "final"},
{"question": "what take precedence over assingment operators in java ",
"answer": "pre-increment operators"},
{"question": "how do you delimit a block in java",
"answer": "use curly braces"},
{"question": "when does a variable exist",
"answer": "from the point it was declared till the end of the block it was declared in"},
{"question": "how many times is a statement in a do while loop executed",
"answer": "at least once"},
{"question": "what is a foreach loop used for in java",
"answer": "to iterate over a collection of elements"},
{"question": "how do you break out of a block in java",
"answer": "use a break"},
{"question": "what is another name for a method in java",
"answer": "service, interface or header"},
{"question": "what is the return type of a constructor in java",
"answer": "no return type not even void"},
{"question": "what happens when you don't define a constructor for a class in java",
"answer": "java defines one for you wiht no arguments"},
{"question": "what is the approach of keeping you data fields private called in java",
"answer": "encapsulaton"},
{"question": "when you work on objects in java what are you actually working on",
"answer": "their refrence"},
{"question": "what does a refrence variable refer to in java",
"answer": "it refers to an object"},
{"question": "what does null refer to in java",
"answer": "an object reference which is initialised, but does not refer to any object"},
{"question": "what does class names start with in java",
"answer": "capital letters"},
{"question": "what does instance and methods start with in java",
"answer": "lowercase letters"},
{"question": "when does the garbage collector remove objects from memory",
"answer": "when they are no longer refrenced"},
{"question": "how do you force the garbage colllector in java",
"answer": "System.gc();"},
{"question": "what data type are argument and return type in java",
"answer": "primitive data types"},
{"question": "when are return data copied to the client in java",
"answer": "at the completion of the service"},
{"question": "what does this refer to in java",
"answer": "the current class or block"},
{"question": "what is a utility class in java",
"answer": "one that is never instatiated"},
{"question": "when are class methods linked",
"answer": "they are linked statically , so at compile "},
{"question": "when are instance methods linked",
"answer": "they are linked dynamically so at runtime"},
{"question": "why are instance methods dynamically linked",
"answer": "to support Polymorphism"},
{"question": "how do you disable the default constructor",
"answer": "declare the class to be abstract"},
{"question": "what do you pack group related classes in ",
"answer": "name spaces"},
{"question": "what is packaging used for in java",
"answer": "resolving name issues"},
{"question": "how do you use a package in java",
"answer": "use an import statement"},
{"question": "how do you resolve a class in java",
"answer": "by initiating it to be a new instance of a package"},
{"question": "what relationship does java assume about mapping pacakges ",
"answer": "a one to one realtionship"},
{"question": "what does cp stand for in java",
"answer": "class path"},
{"question": "what is the default value of the class path",
"answer": "the current directory"},
{"question": "where do you register package names in java",
"answer": "use IANA"},
{"question": "what happens when an exception is not handled within the main function",
"answer": "application aborts with error message"},
{"question": "when should an exception be handled",
"answer": "as low in the heirachy as possible"},
{"question": "what is another name for a multidimentional array",
"answer": "matrix"},
{"question": "what is the first index of an array",
"answer": "zero"},
{"question": "what does the datafield length return with regards to arrays in java",
"answer": "the amount of elements"},
{"question": "how do you implicity create an array in java",
"answer": "use values in curly braces separated by commas"},
{"question": "how do you implicity create a matrix in java",
"answer": "use values in groups of curly braces separetd by commas"},
{"question": "how do you supply command line arguments",
"answer": "use the array of strings args"},
{"question": "how are lambda functions specified",
"answer": "use mapping"},
{"question": "what is currying in java",
"answer": "a function that returns another function"},
{"question": "give examples of immperative programming",
"answer": "procedural and object orientated"},
{"question": "what does functional programming use instead of iteration",
"answer": "it uses recursion"},
{"question": "what is referencial transparency in java",
"answer": "when a function returns the same value when supplied the same argument"},
{"question": "what is a monad in java",
"answer": "pattern in functional programming that can be used to simplify working with certain types of data, such as nullable or optional values."},
{"question": "what is another name for lambda functions in java",
"answer": "function literals"},
{"question": "what is closure in java",
"answer": "a function that refers to variable in their lexical state"},
{"question": "what is map-reduce used for in java",
"answer": "to process large amounts of data in parallel to the computation"},
{"question": "what does SAM stand for in java",
"answer": "single abstract method"},
{"question": "what is a functional interface",
"answer": "an interface with a single method representing a function"},
{"question": "where are the parameters specified for a lambda function in java ",
"answer": "within round brackets"},
{"question": "how are parameters delimited in a lambda function in java",
"answer": "use a comma"},
{"question": "what is a pure function in java",
"answer": "one that does not alter the environment"},
{"question": "what is a consumer in java",
"answer": "an interface that takes in a prameter and returns nothing"},
{"question": "what is a supplier in java",
"answer": "an interface that has no inputs but returns data "},
{"question": "what is a predicate in java",
"answer": "an interface that returns a boolean based on its input"},
{"question": "what is an oprator in java",
"answer": "an interface that takes in a operand as its input and performs a operation on it"},
{"question": "what is the generic pipline in java",
"answer": "supplier,predicate,mapping function,consumer"},
{"question": "what is another name for multithreading in java",
"answer": "concurrency"},
{"question": "where does the JVM map java threads onto ",
"answer": "OS threads"},
{"question": "what is concurrency",
"answer": "when different threads obtain threir own portion of processor time and is not truly in parallel"},
{"question": "what is parallelism in java",
"answer": "when each thread gets its own processing unit if not are avaible itstarts running concurrently"},
{"question": "what is a thread in java",
"answer": "a simple sequence of instructions performed to complete a task"},
{"question": "in cooperative systems who controls the threads",
"answer": "threads are controlled by the thread scheduler"},
{"question": "what is the opposite of a cooperative system",
"answer": "a preemptive system"},
{"question": "what is a preemptive system in java",
"answer": "the act of temporarily interupting an executing task"},
{"question": "how many priority levels are there for threads in java",
"answer": "10 levels"},
{"question": "what is the default priority level in java",
"answer": "level 5"},
{"question": "what is an atomic operation in java",
"answer": "an operation that cannot be interrupted"},
{"question": "what should you do to blocks of code that are atomic",
"answer": "synchronise them"},
{"question": "which methods are regarded as atomic in java",
"answer": "methods that alter a local variable or instance only in the last statement"},
{"question": "how many threads does a system in java have",
"answer": "at least one"},
{"question": "where are are the instructions that comprise a thread specified in java",
"answer": "inside the threads run method"},
{"question": "what method spawns a new thread in java ",
"answer": "start method"},
{"question": "who calls the new threads run method in java",
"answer": "the JVM"},
{"question": "what type of system has the ability to preempt running threads in java",
"answer": "scheduling systems"},
{"question": "in what manner should you write your threads in java",
"answer": "in a manner that they can both run in parallel and concurrently"},
{"question": "what method allows a thread to suspend itself in java",
"answer": "sleep or yield method"},
{"question": "what is a daemon thread in java",
"answer": "a thread that runs in the background"},
{"question": "what is the default state of a thread in java",
"answer": "non-daemon"},
{"question": "what instance service do you use to declare a daemon thread",
"answer": "thread.setDaemon(true)"},
{"question": "when can you set the state of a thread in java",
"answer": "when it is not active"},
{"question": "what is another name for a non-daemon thread",
"answer": "user thread"},
{"question": "what are daemon threads typically used for",
"answer": "to provide background services"},
{"question": "give an example of a use for a daemon thread",
"answer": "a mail client application"},
{"question": "when does an application terminate",
"answer": "when the last non-daemon thread terminates"},
{"question": "what is the default state of a thread spawned from daemon in java",
"answer": "daemon"},
{"question": "what method do you use to cahneg the priority of a thread in java",
"answer": "setPriority(int)"},
{"question": "where is a thread luanched from",
"answer": "the thread object"},
{"question": "what is a mutex in java",
"answer": "a mutually exclusive object that allows threads to access thread in a certain order via locking and unlocking"},
{"question": "what is a semaphore ",
"answer": "a signaling mechanism that tells weather a process is acquiring or releasing a resouce via an interger varible"},
{"question": "how do you assign a mutex",
"answer": "use sychronized"},
{"question": "what techniques are used fro inter-thread communication",
"answer": "shared resources or piped streams"},
{"question": "what does the wait method do in java",
"answer": "temporarily releases the monitor so that other threads can access the protected resource"},
{"question": "where can th wait method be called from",
"answer": "from the thread that holds th monitor"},
{"question": "when does the wait method run till",
"answer": "when notify or notifAll is called"},
{"question": "what is common to assosciate with a consumer",
"answer": "a time out algorithm"},
{"question": "what classes are used for threads to communicate in java",
"answer": " java.io.PipedInputStream and java.io.PipedOutputStream classes"},
{"question": "what is thrown when sending data to a dead thread",
"answer": "IOException"},
{"question": "how do you end a thread in java",
"answer": "use terminate method"},
{"question": "what does the terminate method do in java",
"answer": "checks for a stopRequested flag to close itself down in a controlled manner"},
{"question": "when does a race condition occur",
"answer": "when multiple threads try to access the same object at the same time "},
{"question": "what is a spin lock",
"answer": "a techniques where when you check for the availability of a resource until it is available and then oonce more via a while loop"},
{"question": "what is a deadlock in java",
"answer": "when two threads are blocked waiting for each other"},
{"question": "what is a technique that prevents deadlock",
"answer": "only releasing one monitor or use global ordering"},
{"question": "what is decoupling in java",
"answer": "decoupling is the technique of separating component or parts of code in a threads so that tehy do not affect each other i.e shared resources"},
{"question": "what type of collections are arrays in java",
"answer": "random access collections"},
{"question": "how do you calculate the memory address of an element in an array",
"answer": "base address + (index * size of each element)"},
{"question": "how do you hold a primitive data type in a collection",
"answer": "wrap it in an object"},
{"question": "what are containers in java",
"answer": "Interfaces representing different types of containers which can contain objects, and offers around adding, removing, and accessing the contents"},
{"question": "what are iterators used for in java",
"answer": "to traverse through items in a collections"},
{"question": "what are algorithms in the java collections framework",
"answer": "a set of utility services for collections i.e shuffling"},
{"question": "what does the size method do in the collection interface in java",
"answer": "return the number of element in the collection"},
{"question": "what data type does the isEmpty method return ",
"answer": "boolen"},

{"question": "What is a Gradle in Java?",
"answer": "a build automation tool for Java projects. It is similar to Maven, but with a more expressive and flexible build script. It also supports multi-language projects and incremental build."}
]