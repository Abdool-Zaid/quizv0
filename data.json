[
{"question": "What is the data type for whole numbers in Java?",
"answer": "int (integer)"},
{"question": "What is the data type for decimal numbers in Java?",
"answer": "float and double"},
{"question": "What is the data type for true or false values in Java?",
"answer": "boolean"},
{"question": "What is the data type for a single character in Java?",
"answer": "char"},
{"question": "What is the data type for a sequence of characters in Java?",
"answer": "String"},
{"question": "What is the data type that can store a reference of an object",
"answer": "Object"},
{"question": "What is the data type that denotes that a variable is not pointing to any memory location",
"answer": "null"},
{"question": "What is an access modifier in Java?",
"answer": "a keyword that is used to specify the level of access to a class, method, or variable. Examples include public,private,protected, and default."},
{"question": "What is the difference between public and private access modifiers?",
"answer": "A public class, method, or variable can be accessed by any other class or code. A private class, method, or variable can only be accessed within the same class."},
{"question": "What is encapsulation in Java?",
"answer": "the process of wrapping the data (fields) and behavior (methods) of an object within a single unit (class). It allows the developer to hide the implementation details of the object and expose only the necessary methods to interact with the object."},
{"question":" What is polymorphism in Java?",
"answer": "the ability of an object to take on many forms. In Java, it refers to the ability of an object to be used as an instance of any of its parent classes or interfaces."},
{"question": "What is inheritance in Java?",
"answer": "a mechanism that allows a new class to inherit the properties and methods of an existing class. The new class is called a subclass or child class, and the existing class is called a superclass or parent class."},
{"question": "What is an interface in Java?",
"answer": "a collection of abstract methods (methods without a body) that a class can implement. It is used to define a contract that the class must follow."},
{"question": "What is an abstract class in Java?",
"answer": "a class that cannot be instantiated and is typically used as a base class for other classes. It can contain both abstract and concrete methods (methods with a body)."},
{"question":" What is a constructor in Java?",
"answer": "a special method that is used to create and initialize an object of a class. It has the same name as the class and is automatically called when an object of the class is created."},
{"question":" What is the difference between a constructor and a method in Java?",
"answer": "A constructor is used to create and initialize an object of a class, while a method is used to perform a specific task or set of tasks."},
{"question": "What is a static method in Java?",
"answer": "a method that can be called on a class, rather than on an object of the class. It does not have access to the non-static fields or methods of the class."},
{"question": "What is an exception in Java?",
"answer": "an abnormal event that occurs during the execution of a program. It is used to indicate that something has gone wrong, and the program needs to take a specific action to handle it."},
{"question": "What is a try-catch block used for in Java?",
"answer":"used to handle exceptions in Java. The 'try' block contains the code that may throw an exception, and the 'catch' block contains the code that will handle the exception if it occurs."},
{"question": "What is a finally block in Java?",
"answer": "used in conjunction with a try-catch block in Java. The finally block contains code that will always be executed, regardless of whether an exception was thrown or caught. It is typically used to release resources or perform cleanup tasks."},
{"question":" What is the difference between a checked exception and an unchecked exception?",
"answer": "A checked exception is an exception that must be handled by the program, either by being caught in a try-catch block or being declared in the throws clause of a method. An unchecked exception is an exception that does not need to be handled by the program."},
{"question": "What is an Array in Java?",
"answer": "a data structure in Java that stores a fixed-size sequential collection of elements of the same type. It allows you to store and retrieve values by their index position."},
{"question": "What is an ArrayList in Java?",
"answer": "a class in Java that implements the List interface and provides a resizable array implementation of it. It allows you to store and retrieve elements dynamically and provides various methods to add, remove, and access elements."},
{"question": "What is a LinkedList in Java?",
"answer": "a class in Java that implements the List interface and provides a doubly-linked list implementation of it. It allows you to store and retrieve elements dynamically and provides various methods to add, remove, and access elements."},
{"question": "What is a HashMap in Java?",
"answer": "a class in Java that implements the Map interface and provides a hash table implementation of it. It stores key-value pairs and allows you to retrieve values based on their keys."},
{"question": "What is a Stack in Java?",
"answer": "a data structure in Java that implements the Last In First Out (LIFO) principle. It allows you to push and pop elements, and also provides a peek method to view the top element."},
{"question": "What is a Queue in Java?",
"answer": "a data structure in Java that implements the First In First Out (FIFO) principle. It allows you to add and remove elements, and also provides a peek method to view the question element."},
{"question": "What is a Tree in Java?",
"answer": "a data structure in Java that simulates a hierarchical tree-like structure. Each element in the tree is called a node and it may have parent and child nodes."},
{"question": "What is a Binary Tree in Java?",
"answer": "a Tree data structure in Java where each node has at most two childrens, left child and right child."},
{"question": "What is a Binary Search Tree in Java?",
"answer": "a Binary Tree data structure where each node has a value and left subtree node values are less than the node value and right subtree nodes are greater than the node value."},
{"question": "What is a Recursion in Java?",
"answer": "a programming technique where a function calls itself, directly or indirectly. It is a powerful technique but needs to be used carefully as it can lead to stack overflow if the recursion is not implemented properly"},
{"question": "What is a Lambda expression in Java?",
"answer": "a shorthand notation for creating anonymous function, in other words a function with no name, that can be passed as a parameter to another function or used as an expression. It allows you to define functional interfaces with a simple and concise syntax, and is a functional programming feature introduced in Java 8."},
{"question": "What is a Stream in Java?",
"answer": "a sequence of elements that can be processed in parallel or sequentially. It was introduced in Java 8 and allows you to perform functional-style operations on the elements such as filter, map, reduce, and more."},
{"question": "What is a Optional in Java?",
"answer": "a container object that may or may not contain a non-null value. It was introduced in Java 8 and helps to prevent NullPointerException and make the code more readable"},
{"question": "What is a package in Java?",
"answer": "a namespace that organizes a set of related classes and interfaces. It allows you to group together classes with similar functionality and prevent naming conflicts with classes in other packages."},
{"question": "What is a JAR file in Java?",
"answer": "a Java Archive file that is used to package multiple Java class files, along with their associated resources like images, audio, etc. into a single file for distribution."},
{"question": "What is a JRE in Java?",
"answer": "a bundle of software that you need to run Java applications and applets. It includes the JVM (Java Virtual Machine), core libraries, and other components to run Java applications on a specific platform."},
{"question": "What is a JDK in Java?",
"answer": "a bundle of software that you need to develop and run Java applications and applets. It includes the JRE, as well as tools for developing, debugging, and monitoring Java applications."},
{"question": "What is a Maven in Java?",
"answer": "a build automation tool for Java projects. It helps to manage the project's dependencies, build, and test the code. It also helps to generate useful project information and reports."},
{"question": "What is a Gradle in Java?",
"answer": "a build automation tool for Java projects. It is similar to Maven, but with a more expressive and flexible build script. It also supports multi-language projects and incremental build."}
]